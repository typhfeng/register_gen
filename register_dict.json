[
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "0",
                "resval": "0",
                "name": "ENABLEHOST",
                "desc": "Enable Host I2C functionality",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable Host I2C functionality",
                "Msb": "0",
                "Lsb": "0"
            },
            {
                "bits": "1",
                "resval": "0",
                "name": "ENABLETARGET",
                "desc": "Enable Target I2C functionality",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable Target I2C functionality",
                "Msb": "1",
                "Lsb": "1"
            },
            {
                "bits": "2",
                "resval": "0",
                "name": "LLPBK",
                "desc": "Enable I2C line loopback test\nIf line loopback is enabled, the internal design sees ACQ and RX data as \"1\"",
                "tags": [
                    "excl:CsrAllTests:CsrExclWrite"
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable I2C line loopback test\nIf line loopback is enabled, the internal design sees ACQ and RX data as \"1\"",
                "Msb": "2",
                "Lsb": "2"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "enablehost": {
                "bits": "0",
                "resval": "0",
                "name": "ENABLEHOST",
                "desc": "Enable Host I2C functionality",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable Host I2C functionality",
                "Msb": "0",
                "Lsb": "0"
            },
            "enabletarget": {
                "bits": "1",
                "resval": "0",
                "name": "ENABLETARGET",
                "desc": "Enable Target I2C functionality",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable Target I2C functionality",
                "Msb": "1",
                "Lsb": "1"
            },
            "llpbk": {
                "bits": "2",
                "resval": "0",
                "name": "LLPBK",
                "desc": "Enable I2C line loopback test\nIf line loopback is enabled, the internal design sees ACQ and RX data as \"1\"",
                "tags": [
                    "excl:CsrAllTests:CsrExclWrite"
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "0",
                "Description": "Enable I2C line loopback test\nIf line loopback is enabled, the internal design sees ACQ and RX data as \"1\"",
                "Msb": "2",
                "Lsb": "2"
            }
        }
    },
    {
        "swaccess": "ro",
        "hwaccess": "hwo",
        "hwext": "true",
        "fields": [
            {
                "bits": "0",
                "name": "FMTFULL",
                "desc": "FMT FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "FMT FIFO is full",
                "Msb": "0",
                "Lsb": "0"
            },
            {
                "bits": "1",
                "name": "RXFULL",
                "desc": "RX FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "RX FIFO is full",
                "Msb": "1",
                "Lsb": "1"
            },
            {
                "bits": "2",
                "name": "FMTEMPTY",
                "desc": "FMT FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "FMT FIFO is empty",
                "Msb": "2",
                "Lsb": "2"
            },
            {
                "bits": "5",
                "name": "RXEMPTY",
                "desc": "RX FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "RX FIFO is empty",
                "Msb": "5",
                "Lsb": "5"
            },
            {
                "bits": "3",
                "name": "HOSTIDLE",
                "desc": "Host functionality is idle. No Host transaction is in progress",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "Host functionality is idle. No Host transaction is in progress",
                "Msb": "3",
                "Lsb": "3"
            },
            {
                "bits": "4",
                "name": "TARGETIDLE",
                "desc": "Target functionality is idle. No Target transaction is in progress",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "Target functionality is idle. No Target transaction is in progress",
                "Msb": "4",
                "Lsb": "4"
            },
            {
                "bits": "6",
                "name": "TXFULL",
                "desc": "TX FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "TX FIFO is full",
                "Msb": "6",
                "Lsb": "6"
            },
            {
                "bits": "7",
                "name": "ACQFULL",
                "desc": "ACQ FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "ACQ FIFO is full",
                "Msb": "7",
                "Lsb": "7"
            },
            {
                "bits": "8",
                "name": "TXEMPTY",
                "desc": "TX FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "TX FIFO is empty",
                "Msb": "8",
                "Lsb": "8"
            },
            {
                "bits": "9",
                "name": "ACQEMPTY",
                "desc": "ACQ FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "ACQ FIFO is empty",
                "Msb": "9",
                "Lsb": "9"
            }
        ],
        "tags": [
            "excl:CsrNonInitTests:CsrExclWriteCheck"
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "fmtfull": {
                "bits": "0",
                "name": "FMTFULL",
                "desc": "FMT FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "FMT FIFO is full",
                "Msb": "0",
                "Lsb": "0"
            },
            "rxfull": {
                "bits": "1",
                "name": "RXFULL",
                "desc": "RX FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "RX FIFO is full",
                "Msb": "1",
                "Lsb": "1"
            },
            "fmtempty": {
                "bits": "2",
                "name": "FMTEMPTY",
                "desc": "FMT FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "FMT FIFO is empty",
                "Msb": "2",
                "Lsb": "2"
            },
            "rxempty": {
                "bits": "5",
                "name": "RXEMPTY",
                "desc": "RX FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "RX FIFO is empty",
                "Msb": "5",
                "Lsb": "5"
            },
            "hostidle": {
                "bits": "3",
                "name": "HOSTIDLE",
                "desc": "Host functionality is idle. No Host transaction is in progress",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "Host functionality is idle. No Host transaction is in progress",
                "Msb": "3",
                "Lsb": "3"
            },
            "targetidle": {
                "bits": "4",
                "name": "TARGETIDLE",
                "desc": "Target functionality is idle. No Target transaction is in progress",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "Target functionality is idle. No Target transaction is in progress",
                "Msb": "4",
                "Lsb": "4"
            },
            "txfull": {
                "bits": "6",
                "name": "TXFULL",
                "desc": "TX FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "TX FIFO is full",
                "Msb": "6",
                "Lsb": "6"
            },
            "acqfull": {
                "bits": "7",
                "name": "ACQFULL",
                "desc": "ACQ FIFO is full",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "ACQ FIFO is full",
                "Msb": "7",
                "Lsb": "7"
            },
            "txempty": {
                "bits": "8",
                "name": "TXEMPTY",
                "desc": "TX FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "TX FIFO is empty",
                "Msb": "8",
                "Lsb": "8"
            },
            "acqempty": {
                "bits": "9",
                "name": "ACQEMPTY",
                "desc": "ACQ FIFO is empty",
                "resval": "1",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "1",
                "Description": "ACQ FIFO is empty",
                "Msb": "9",
                "Lsb": "9"
            }
        }
    },
    {
        "swaccess": "ro",
        "hwaccess": "hrw",
        "hwext": "true",
        "hwre": "true",
        "fields": [
            {
                "bits": "7:0"
            }
        ],
        "tags": [
            "excl:CsrAllTests:CsrExclCheck"
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "rdata": {
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "",
                "Msb": "7",
                "Lsb": "0"
            }
        }
    },
    {
        "swaccess": "wo",
        "hwaccess": "hro",
        "hwqe": "true",
        "fields": [
            {
                "bits": "7:0",
                "name": "FBYTE",
                "desc": "Format Byte. Directly transmitted if no flags are set.",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Format Byte. Directly transmitted if no flags are set.",
                "Msb": "7",
                "Lsb": "0"
            },
            {
                "bits": "8",
                "name": "START",
                "desc": "Issue a START condition before transmitting BYTE.",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Issue a START condition before transmitting BYTE.",
                "Msb": "8",
                "Lsb": "8"
            },
            {
                "bits": "9",
                "name": "STOP",
                "desc": "Issue a STOP condition after this operation",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Issue a STOP condition after this operation",
                "Msb": "9",
                "Lsb": "9"
            },
            {
                "bits": "10",
                "name": "READ",
                "desc": "Read BYTE bytes from I2C. (256 if BYTE==0)",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Read BYTE bytes from I2C. (256 if BYTE==0)",
                "Msb": "10",
                "Lsb": "10"
            },
            {
                "bits": "11",
                "name": "RCONT",
                "desc": "Do not NAK the last byte read, let the read operation continue",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Do not NAK the last byte read, let the read operation continue",
                "Msb": "11",
                "Lsb": "11"
            },
            {
                "bits": "12",
                "name": "NAKOK",
                "desc": "Do not signal an exception if the current byte is not ACK'd",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Do not signal an exception if the current byte is not ACK'd",
                "Msb": "12",
                "Lsb": "12"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "fbyte": {
                "bits": "7:0",
                "name": "FBYTE",
                "desc": "Format Byte. Directly transmitted if no flags are set.",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Format Byte. Directly transmitted if no flags are set.",
                "Msb": "7",
                "Lsb": "0"
            },
            "start": {
                "bits": "8",
                "name": "START",
                "desc": "Issue a START condition before transmitting BYTE.",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Issue a START condition before transmitting BYTE.",
                "Msb": "8",
                "Lsb": "8"
            },
            "stop": {
                "bits": "9",
                "name": "STOP",
                "desc": "Issue a STOP condition after this operation",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Issue a STOP condition after this operation",
                "Msb": "9",
                "Lsb": "9"
            },
            "read": {
                "bits": "10",
                "name": "READ",
                "desc": "Read BYTE bytes from I2C. (256 if BYTE==0)",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Read BYTE bytes from I2C. (256 if BYTE==0)",
                "Msb": "10",
                "Lsb": "10"
            },
            "rcont": {
                "bits": "11",
                "name": "RCONT",
                "desc": "Do not NAK the last byte read, let the read operation continue",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Do not NAK the last byte read, let the read operation continue",
                "Msb": "11",
                "Lsb": "11"
            },
            "nakok": {
                "bits": "12",
                "name": "NAKOK",
                "desc": "Do not signal an exception if the current byte is not ACK'd",
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Do not signal an exception if the current byte is not ACK'd",
                "Msb": "12",
                "Lsb": "12"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "hwqe": "true",
        "fields": [
            {
                "bits": "0",
                "swaccess": "wo",
                "name": "RXRST",
                "desc": "RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0",
                "Msb": "0",
                "Lsb": "0"
            },
            {
                "bits": "1",
                "swaccess": "wo",
                "name": "FMTRST",
                "desc": "FMT fifo reset. Write 1 to the register resets FMT_FIFO. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "FMT fifo reset. Write 1 to the register resets FMT_FIFO. Read returns 0",
                "Msb": "1",
                "Lsb": "1"
            },
            {
                "bits": "4:2",
                "name": "RXILVL",
                "desc": "Trigger level for RX interrupts. If the FIFO depth exceeds\nthis setting, it raises rx_threshold interrupt.",
                "enum": [
                    {
                        "value": "0",
                        "name": "rxlvl1",
                        "desc": "1 character"
                    },
                    {
                        "value": "1",
                        "name": "rxlvl4",
                        "desc": "4 characters"
                    },
                    {
                        "value": "2",
                        "name": "rxlvl8",
                        "desc": "8 characters"
                    },
                    {
                        "value": "3",
                        "name": "rxlvl16",
                        "desc": "16 characters"
                    },
                    {
                        "value": "4",
                        "name": "rxlvl30",
                        "desc": "30 characters"
                    }
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Trigger level for RX interrupts. If the FIFO depth exceeds\nthis setting, it raises rx_threshold interrupt.",
                "Msb": "4",
                "Lsb": "2"
            },
            {
                "bits": "6:5",
                "name": "FMTILVL",
                "desc": "Trigger level for FMT interrupts. If the FIFO depth falls below\nthis setting, it raises fmt_threshold interrupt.",
                "enum": [
                    {
                        "value": "0",
                        "name": "fmtlvl1",
                        "desc": "1 character"
                    },
                    {
                        "value": "1",
                        "name": "fmtlvl4",
                        "desc": "4 characters"
                    },
                    {
                        "value": "2",
                        "name": "fmtlvl8",
                        "desc": "8 characters"
                    },
                    {
                        "value": "3",
                        "name": "fmtlvl16",
                        "desc": "16 characters"
                    }
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Trigger level for FMT interrupts. If the FIFO depth falls below\nthis setting, it raises fmt_threshold interrupt.",
                "Msb": "6",
                "Lsb": "5"
            },
            {
                "bits": "7",
                "swaccess": "wo",
                "name": "ACQRST",
                "desc": "ACQ FIFO reset. Write 1 to the register resets it. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "ACQ FIFO reset. Write 1 to the register resets it. Read returns 0",
                "Msb": "7",
                "Lsb": "7"
            },
            {
                "bits": "8",
                "swaccess": "wo",
                "name": "TXRST",
                "desc": "TX FIFO reset. Write 1 to the register resets it. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "TX FIFO reset. Write 1 to the register resets it. Read returns 0",
                "Msb": "8",
                "Lsb": "8"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "rxrst": {
                "bits": "0",
                "swaccess": "wo",
                "name": "RXRST",
                "desc": "RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0",
                "Msb": "0",
                "Lsb": "0"
            },
            "fmtrst": {
                "bits": "1",
                "swaccess": "wo",
                "name": "FMTRST",
                "desc": "FMT fifo reset. Write 1 to the register resets FMT_FIFO. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "FMT fifo reset. Write 1 to the register resets FMT_FIFO. Read returns 0",
                "Msb": "1",
                "Lsb": "1"
            },
            "rxilvl": {
                "bits": "4:2",
                "name": "RXILVL",
                "desc": "Trigger level for RX interrupts. If the FIFO depth exceeds\nthis setting, it raises rx_threshold interrupt.",
                "enum": [
                    {
                        "value": "0",
                        "name": "rxlvl1",
                        "desc": "1 character"
                    },
                    {
                        "value": "1",
                        "name": "rxlvl4",
                        "desc": "4 characters"
                    },
                    {
                        "value": "2",
                        "name": "rxlvl8",
                        "desc": "8 characters"
                    },
                    {
                        "value": "3",
                        "name": "rxlvl16",
                        "desc": "16 characters"
                    },
                    {
                        "value": "4",
                        "name": "rxlvl30",
                        "desc": "30 characters"
                    }
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Trigger level for RX interrupts. If the FIFO depth exceeds\nthis setting, it raises rx_threshold interrupt.",
                "Msb": "4",
                "Lsb": "2"
            },
            "fmtilvl": {
                "bits": "6:5",
                "name": "FMTILVL",
                "desc": "Trigger level for FMT interrupts. If the FIFO depth falls below\nthis setting, it raises fmt_threshold interrupt.",
                "enum": [
                    {
                        "value": "0",
                        "name": "fmtlvl1",
                        "desc": "1 character"
                    },
                    {
                        "value": "1",
                        "name": "fmtlvl4",
                        "desc": "4 characters"
                    },
                    {
                        "value": "2",
                        "name": "fmtlvl8",
                        "desc": "8 characters"
                    },
                    {
                        "value": "3",
                        "name": "fmtlvl16",
                        "desc": "16 characters"
                    }
                ],
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Trigger level for FMT interrupts. If the FIFO depth falls below\nthis setting, it raises fmt_threshold interrupt.",
                "Msb": "6",
                "Lsb": "5"
            },
            "acqrst": {
                "bits": "7",
                "swaccess": "wo",
                "name": "ACQRST",
                "desc": "ACQ FIFO reset. Write 1 to the register resets it. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "ACQ FIFO reset. Write 1 to the register resets it. Read returns 0",
                "Msb": "7",
                "Lsb": "7"
            },
            "txrst": {
                "bits": "8",
                "swaccess": "wo",
                "name": "TXRST",
                "desc": "TX FIFO reset. Write 1 to the register resets it. Read returns 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "TX FIFO reset. Write 1 to the register resets it. Read returns 0",
                "Msb": "8",
                "Lsb": "8"
            }
        }
    },
    {
        "swaccess": "ro",
        "hwaccess": "hwo",
        "hwext": "true",
        "fields": [
            {
                "bits": "6:0",
                "name": "FMTLVL",
                "desc": "Current fill level of FMT fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of FMT fifo",
                "Msb": "6",
                "Lsb": "0"
            },
            {
                "bits": "22:16",
                "name": "RXLVL",
                "desc": "Current fill level of RX fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of RX fifo",
                "Msb": "22",
                "Lsb": "16"
            },
            {
                "bits": "14:8",
                "name": "TXLVL",
                "desc": "Current fill level of TX fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of TX fifo",
                "Msb": "14",
                "Lsb": "8"
            },
            {
                "bits": "30:24",
                "name": "ACQLVL",
                "desc": "Current fill level of ACQ fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of ACQ fifo",
                "Msb": "30",
                "Lsb": "24"
            }
        ],
        "tags": [
            "excl:CsrNonInitTests:CsrExclWriteCheck"
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "fmtlvl": {
                "bits": "6:0",
                "name": "FMTLVL",
                "desc": "Current fill level of FMT fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of FMT fifo",
                "Msb": "6",
                "Lsb": "0"
            },
            "rxlvl": {
                "bits": "22:16",
                "name": "RXLVL",
                "desc": "Current fill level of RX fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of RX fifo",
                "Msb": "22",
                "Lsb": "16"
            },
            "txlvl": {
                "bits": "14:8",
                "name": "TXLVL",
                "desc": "Current fill level of TX fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of TX fifo",
                "Msb": "14",
                "Lsb": "8"
            },
            "acqlvl": {
                "bits": "30:24",
                "name": "ACQLVL",
                "desc": "Current fill level of ACQ fifo",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Current fill level of ACQ fifo",
                "Msb": "30",
                "Lsb": "24"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "0",
                "name": "TXOVRDEN",
                "desc": "Override the SDA and SCL TX signals.",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Override the SDA and SCL TX signals.",
                "Msb": "0",
                "Lsb": "0"
            },
            {
                "bits": "1",
                "name": "SCLVAL",
                "desc": "Value for SCL Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Value for SCL Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "Msb": "1",
                "Lsb": "1"
            },
            {
                "bits": "2",
                "name": "SDAVAL",
                "desc": "Value for SDA Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Value for SDA Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "Msb": "2",
                "Lsb": "2"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "txovrden": {
                "bits": "0",
                "name": "TXOVRDEN",
                "desc": "Override the SDA and SCL TX signals.",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Override the SDA and SCL TX signals.",
                "Msb": "0",
                "Lsb": "0"
            },
            "sclval": {
                "bits": "1",
                "name": "SCLVAL",
                "desc": "Value for SCL Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Value for SCL Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "Msb": "1",
                "Lsb": "1"
            },
            "sdaval": {
                "bits": "2",
                "name": "SDAVAL",
                "desc": "Value for SDA Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Value for SDA Override. Set to 0 to drive TX Low, and set to 1 for high-Z",
                "Msb": "2",
                "Lsb": "2"
            }
        }
    },
    {
        "swaccess": "ro",
        "hwaccess": "hwo",
        "hwext": "true",
        "fields": [
            {
                "bits": "15:0",
                "name": "SCL_RX",
                "desc": "Last 16 oversampled values of SCL. Most recent bit is bit 0, oldest 15.",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Last 16 oversampled values of SCL. Most recent bit is bit 0, oldest 15.",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "SDA_RX",
                "desc": "Last 16 oversampled values of SDA. Most recent bit is bit 16, oldest 31.",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Last 16 oversampled values of SDA. Most recent bit is bit 16, oldest 31.",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "tags": [
            "excl:CsrAllTests:CsrExclCheck"
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "scl_rx": {
                "bits": "15:0",
                "name": "SCL_RX",
                "desc": "Last 16 oversampled values of SCL. Most recent bit is bit 0, oldest 15.",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Last 16 oversampled values of SCL. Most recent bit is bit 0, oldest 15.",
                "Msb": "15",
                "Lsb": "0"
            },
            "sda_rx": {
                "bits": "31:16",
                "name": "SDA_RX",
                "desc": "Last 16 oversampled values of SDA. Most recent bit is bit 16, oldest 31.",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Last 16 oversampled values of SDA. Most recent bit is bit 16, oldest 31.",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "15:0",
                "name": "THIGH",
                "desc": "The actual time to hold SCL high in a given pulse",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The actual time to hold SCL high in a given pulse",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "TLOW",
                "desc": "The actual time to hold SCL low between any two SCL pulses",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The actual time to hold SCL low between any two SCL pulses",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "thigh": {
                "bits": "15:0",
                "name": "THIGH",
                "desc": "The actual time to hold SCL high in a given pulse",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The actual time to hold SCL high in a given pulse",
                "Msb": "15",
                "Lsb": "0"
            },
            "tlow": {
                "bits": "31:16",
                "name": "TLOW",
                "desc": "The actual time to hold SCL low between any two SCL pulses",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The actual time to hold SCL low between any two SCL pulses",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "15:0",
                "name": "T_R",
                "desc": "The nominal rise time to anticipate for the bus (depends on capacitance)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The nominal rise time to anticipate for the bus (depends on capacitance)",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "T_F",
                "desc": "The nominal fall time to anticipate for the bus (influences SDA hold times)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The nominal fall time to anticipate for the bus (influences SDA hold times)",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "t_r": {
                "bits": "15:0",
                "name": "T_R",
                "desc": "The nominal rise time to anticipate for the bus (depends on capacitance)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The nominal rise time to anticipate for the bus (depends on capacitance)",
                "Msb": "15",
                "Lsb": "0"
            },
            "t_f": {
                "bits": "31:16",
                "name": "T_F",
                "desc": "The nominal fall time to anticipate for the bus (influences SDA hold times)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "The nominal fall time to anticipate for the bus (influences SDA hold times)",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "15:0",
                "name": "TSU_STA",
                "desc": "Actual setup time for repeated start signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for repeated start signals",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "THD_STA",
                "desc": "Actual hold time for start signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual hold time for start signals",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "tsu_sta": {
                "bits": "15:0",
                "name": "TSU_STA",
                "desc": "Actual setup time for repeated start signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for repeated start signals",
                "Msb": "15",
                "Lsb": "0"
            },
            "thd_sta": {
                "bits": "31:16",
                "name": "THD_STA",
                "desc": "Actual hold time for start signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual hold time for start signals",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "15:0",
                "name": "TSU_DAT",
                "desc": "Actual setup time for data (or ack) bits",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for data (or ack) bits",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "THD_DAT",
                "desc": "Actual hold time for data (or ack) bits\n(Note, where required, the parameters TVD_DAT is taken to be THD_DAT+T_F)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual hold time for data (or ack) bits\n(Note, where required, the parameters TVD_DAT is taken to be THD_DAT+T_F)",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "tsu_dat": {
                "bits": "15:0",
                "name": "TSU_DAT",
                "desc": "Actual setup time for data (or ack) bits",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for data (or ack) bits",
                "Msb": "15",
                "Lsb": "0"
            },
            "thd_dat": {
                "bits": "31:16",
                "name": "THD_DAT",
                "desc": "Actual hold time for data (or ack) bits\n(Note, where required, the parameters TVD_DAT is taken to be THD_DAT+T_F)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual hold time for data (or ack) bits\n(Note, where required, the parameters TVD_DAT is taken to be THD_DAT+T_F)",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "15:0",
                "name": "TSU_STO",
                "desc": "Actual setup time for stop signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for stop signals",
                "Msb": "15",
                "Lsb": "0"
            },
            {
                "bits": "31:16",
                "name": "T_BUF",
                "desc": "Actual time between each STOP signal and the following START signal",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual time between each STOP signal and the following START signal",
                "Msb": "31",
                "Lsb": "16"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "tsu_sto": {
                "bits": "15:0",
                "name": "TSU_STO",
                "desc": "Actual setup time for stop signals",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual setup time for stop signals",
                "Msb": "15",
                "Lsb": "0"
            },
            "t_buf": {
                "bits": "31:16",
                "name": "T_BUF",
                "desc": "Actual time between each STOP signal and the following START signal",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Actual time between each STOP signal and the following START signal",
                "Msb": "31",
                "Lsb": "16"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "30:0",
                "name": "VAL",
                "desc": "Clock stretching timeout value (in units of input clock frequency)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Clock stretching timeout value (in units of input clock frequency)",
                "Msb": "30",
                "Lsb": "0"
            },
            {
                "bits": "31",
                "name": "EN",
                "desc": "Enable timeout feature",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Enable timeout feature",
                "Msb": "31",
                "Lsb": "31"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "val": {
                "bits": "30:0",
                "name": "VAL",
                "desc": "Clock stretching timeout value (in units of input clock frequency)",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Clock stretching timeout value (in units of input clock frequency)",
                "Msb": "30",
                "Lsb": "0"
            },
            "en": {
                "bits": "31",
                "name": "EN",
                "desc": "Enable timeout feature",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Enable timeout feature",
                "Msb": "31",
                "Lsb": "31"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "6:0",
                "name": "ADDRESS0",
                "desc": "I2C target address number 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target address number 0",
                "Msb": "6",
                "Lsb": "0"
            },
            {
                "bits": "13:7",
                "name": "MASK0",
                "desc": "I2C target mask number 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target mask number 0",
                "Msb": "13",
                "Lsb": "7"
            },
            {
                "bits": "20:14",
                "name": "ADDRESS1",
                "desc": "I2C target address number 1",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target address number 1",
                "Msb": "20",
                "Lsb": "14"
            },
            {
                "bits": "27:21",
                "name": "MASK1",
                "desc": "I2C target mask number 1",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target mask number 1",
                "Msb": "27",
                "Lsb": "21"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "address0": {
                "bits": "6:0",
                "name": "ADDRESS0",
                "desc": "I2C target address number 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target address number 0",
                "Msb": "6",
                "Lsb": "0"
            },
            "mask0": {
                "bits": "13:7",
                "name": "MASK0",
                "desc": "I2C target mask number 0",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target mask number 0",
                "Msb": "13",
                "Lsb": "7"
            },
            "address1": {
                "bits": "20:14",
                "name": "ADDRESS1",
                "desc": "I2C target address number 1",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target address number 1",
                "Msb": "20",
                "Lsb": "14"
            },
            "mask1": {
                "bits": "27:21",
                "name": "MASK1",
                "desc": "I2C target mask number 1",
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "I2C target mask number 1",
                "Msb": "27",
                "Lsb": "21"
            }
        }
    },
    {
        "swaccess": "ro",
        "hwaccess": "hrw",
        "hwext": "true",
        "hwre": "true",
        "fields": [
            {
                "bits": "7:0",
                "name": "ABYTE",
                "desc": "Address for accepted transaction or acquired byte",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Address for accepted transaction or acquired byte",
                "Msb": "7",
                "Lsb": "0"
            },
            {
                "bits": "9:8",
                "name": "SIGNAL",
                "desc": "Host issued a START before transmitting ABYTE, a STOP or a RESTART after the preceeding ABYTE",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Host issued a START before transmitting ABYTE, a STOP or a RESTART after the preceeding ABYTE",
                "Msb": "9",
                "Lsb": "8"
            }
        ],
        "tags": [
            "excl:CsrAllTests:CsrExclCheck"
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "abyte": {
                "bits": "7:0",
                "name": "ABYTE",
                "desc": "Address for accepted transaction or acquired byte",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Address for accepted transaction or acquired byte",
                "Msb": "7",
                "Lsb": "0"
            },
            "signal": {
                "bits": "9:8",
                "name": "SIGNAL",
                "desc": "Host issued a START before transmitting ABYTE, a STOP or a RESTART after the preceeding ABYTE",
                "SW": "RO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "Host issued a START before transmitting ABYTE, a STOP or a RESTART after the preceeding ABYTE",
                "Msb": "9",
                "Lsb": "8"
            }
        }
    },
    {
        "swaccess": "wo",
        "hwaccess": "hro",
        "hwqe": "true",
        "fields": [
            {
                "bits": "7:0"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "txdata": {
                "SW": "WO",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "",
                "Msb": "7",
                "Lsb": "0"
            }
        }
    },
    {
        "swaccess": "rw",
        "hwaccess": "hro",
        "fields": [
            {
                "bits": "31:0"
            }
        ],
        "addr": "0x80",
        "sec_wr": "",
        "sec_rd": "",
        "size": "4",
        "repeat": "1",
        "field": {
            "host_timeout_ctrl": {
                "SW": "RW",
                "HW": "",
                "Type": "",
                "Default": "'h0",
                "Description": "",
                "Msb": "31",
                "Lsb": "0"
            }
        }
    }
]